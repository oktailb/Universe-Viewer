char*		ASC_DEGtoSTR_DEG (double Valeur);
char*		ASC_DEGtoSTR_HMS (double Valeur);
char*		ASC_RADtoSTR_DEG (double Valeur);
char*		ASC_RADtoSTR_HMS (double Valeur);
char*		DEC_DEGtoSTR_DEG (double Valeur);
char*		DEC_DEGtoSTR_DMS (double Valeur);
char*		DEC_RADtoSTR_DEG (double Valeur);
char*		DEC_RADtoSTR_DMS (double Valeur);
double		DEGtoRAD (double Degres);
char*		MAGtoSTR (double Valeur);
char*		REDtoSTR (double Valeur);
double		ACOSH(double chteta);
double		AONEonPdeR(Environnement *env, double R);
double		codistance(Environnement* env, Quasar *q1,Quasar *q2);
double		derivl(double a, double k, double l, double o);
double		derivo(double a, double k, double l, double o);
double		DlaRonPdeR(Environnement *env, double R);
double		DMStoDEG (char* Chaine);
double		DMStoRAD (char* TAB);
double		DomRonPdeR(Environnement *env, double R);
double		donne_cell(Environnement *env);
double		donne_integral(Environnement *env, double (*f)(Environnement*, double), double a, double b, int n,int prec);
double		donne_V(Environnement *env, double Z);
double		donne_z(Environnement *env, double V);
double		earth_codistance(Environnement *env, Quasar *q);
double		HMStoDEG (char* TAB);
double		HMStoRAD (char* TAB);
double		integral(Environnement *env, double (*f)(Environnement *, double), double a, double b, int n);
double		inter_distance(Environnement *env, Vector *v1,Vector *v2);
double		ONEonPdeR(Environnement *env, double R);
double		PdeR(Environnement *env, double R);
double		RADtoDEG (double Radians);
double		RonPdeR(Environnement *env, double R);
double		test_C2(double a, double k, double l, double o);
double		test_C3(Environnement *env, double this_age_universe);
double		test_C4(double cell, double CELL);
double		Vnorme(Environnement *env, Vector u);
double		Vscalar(Environnement *env, Vector u,Vector v);
int		coor_tableau(Environnement *env, Point *p, int lenght, Point q);
int		get_bin_nb_quasar(Environnement *env, char* filename);
int		get_txt_nb_quasar (Environnement *env, char *filename);
int		get_xml_nb_quasar (Environnement *env, char* NomFichier);
int		null_PdeR(Environnement *env, double xi, double xf, double step);
int		read_bin_quasar (Environnement *env, char *filename, Quasar * quasar);
int		read_txt_quasar (Environnement *env, char *filename,Quasar * quasar);
int		read_xml_quasar (Environnement *env, char* NomFichier, Quasar* quasar);
Point		*projection (Environnement *env, Vector u, Vector d1,Vector d2);
Point		*set_earth_proj(Environnement *env, Vector here,int i);
Point		*set_quasar_proj(Environnement *env, Vector *pos,int i);
Quasar		*Qinit(double ascension ,double declination ,double redshift ,double tau);
Vector		Vadd(Vector u,Vector v);
Vector		Vinit(double x,double y,double z,double t);
Vector		Vmult(Vector u,double lambda);
Vector		Vneg_curv (Quasar *q);
Vector		Vnormalize(Environnement *env, Vector u);
Vector		Vnul_curv (Environnement *env, Quasar *q);
Vector		Vpos_curv (Quasar *q);
Vector		Vproduct(Vector u,Vector v);
Vector		*calc_quasar_pos (Environnement* env, Quasar *q);
Point		*calc_quasar_proj (Environnement* env, Vector *v,Vector d1,Vector d2,int offset);
Point		*calc_quasar_tau (Environnement *env, Quasar *q);
void		CONCLUSION (FILE* Fichier, int NBDonnees);
void		ENTETE (FILE* Fichier, int NBDonnees);
Point		*grapheA1(Environnement *env, double Rmax);
Point		*grapheA2(Environnement *env);
Point		*grapheC0(Environnement *env, double Omax);
Point		*grapheC1(Environnement *env, double Omax);
Point		*grapheC2(Environnement *env, double Omax);
Point		*grapheC3(Environnement *env, double Omax, double this_age_universe);
Point		*grapheC4(Environnement *env, double Omax);
Point		*grapheP(Environnement *env);
Point		*grC4(Environnement *env, double Omax);
void		init_abacusV(Environnement *env, double Zmax);
void		init_abacus(Environnement *env);
void		init_projection_vectors(Environnement *env);
Quasar		*isotrope(Environnement *env, int nbre,double Zmax,double Zmin,double ra0,double d0,double beta);
void		write_bin_quasar (Environnement *env, Quasar * q,char *filename);
void		write_ps_quasar(Environnement *env, Quasar* q, char* filename);
void		write_txt_quasar(Environnement *env, Quasar *q,char *filename);
void		write_xml_quasar(Environnement *env, Quasar* Q, char* NomFichier);
Environnement	*init_uv(void);
void		*xmalloc(int size);
